"""inspection tables created

Revision ID: a82c5c4a7814
Revises: d36894553777
Create Date: 2024-08-23 10:19:00.809114

"""

import os
from alembic import op
import sqlalchemy as sa
import json
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a82c5c4a7814"
down_revision = "d36894553777"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attendance_options",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the attendance option",
        ),
        sa.Column("name", sa.String(), nullable=True, comment="The name of the option"),
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=True,
            comment="Order of priority. Mainly used order the options while listing",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "case_file_initiation_options",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the case file initiation options",
        ),
        sa.Column("name", sa.String(), nullable=True, comment="The name of the option"),
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=True,
            comment="Order of priority. Mainly used order the options while listing",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "inspection_initiation_options",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the IR type option",
        ),
        sa.Column("name", sa.String(), nullable=True, comment="The name of the option"),
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=True,
            comment="Order of priority. Mainly used order the options while listing",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "ir_status_options",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the IR type option",
        ),
        sa.Column("name", sa.String(), nullable=True, comment="The name of the option"),
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=True,
            comment="Order of priority. Mainly used order the options while listing",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "ir_type_options",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the IR type option",
        ),
        sa.Column("name", sa.String(), nullable=True, comment="The name of the option"),
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=True,
            comment="Order of priority. Mainly used order the options while listing",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "project_status_options",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the project status option",
        ),
        sa.Column("name", sa.String(), nullable=True, comment="The name of the option"),
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=True,
            comment="Order of priority. Mainly used order the options while listing",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "inspections",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the inspection",
        ),
        sa.Column(
            "project_id",
            sa.Integer(),
            nullable=False,
            comment="The unique identifier of the project associated with the inspection",
        ),
        sa.Column(
            "location_description",
            sa.String(),
            nullable=True,
            comment="The location details of the inspection",
        ),
        sa.Column(
            "utm", sa.String(), nullable=True, comment="The UTM value of the location"
        ),
        sa.Column(
            "lead_officer_id",
            sa.Integer(),
            nullable=False,
            comment="The lead officer who created the inspection",
        ),
        sa.Column("ir_type_id", sa.Integer(), nullable=False),
        sa.Column(
            "start_date",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="The inspection start date",
        ),
        sa.Column(
            "end_date",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="The inspection end date",
        ),
        sa.Column("initiation_id", sa.Integer(), nullable=False),
        sa.Column("ir_status_id", sa.Integer(), nullable=True),
        sa.Column("project_status_id", sa.Integer(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.ForeignKeyConstraint(
            ["initiation_id"],
            ["inspection_initiation_options.id"],
            name="inspection_initiation_id_inspection_initiation_options_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["ir_status_id"],
            ["ir_status_options.id"],
            name="inspection_ir_status_id_ir_status_options_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["ir_type_id"],
            ["ir_type_options.id"],
            name="inspection_ir_type_id_ir_type_options_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["lead_officer_id"],
            ["staff_users.id"],
            name="inspection_lead_officer_id_staff_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name="inspections_project_id_projects_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["project_status_id"],
            ["project_status_options.id"],
            name="inspection_project_status_id_project_status_options_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inspection_attendance_mappings",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the mapping",
        ),
        sa.Column("inspection_id", sa.Integer(), nullable=False),
        sa.Column("attendance_option_id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.ForeignKeyConstraint(
            ["attendance_option_id"],
            ["attendance_options.id"],
            name="attendance_mappings__option_id_attendance_options_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["inspection_id"],
            ["inspections.id"],
            name="attendance_mappings_inspection_id__id_fkey",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inspection_officers",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier of the inspection officers",
        ),
        sa.Column(
            "inspection_id",
            sa.Integer(),
            nullable=False,
            comment="The unique identifier of the associated inspection",
        ),
        sa.Column(
            "officer_id",
            sa.Integer(),
            nullable=False,
            comment="The unique identifier of the associated staff user",
        ),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default="f", nullable=False),
        sa.ForeignKeyConstraint(
            ["inspection_id"],
            ["inspections.id"],
            name="inspection_officers_inspection_id_inspection_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["officer_id"],
            ["staff_users.id"],
            name="case_file_officers_staff_users_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("case_files", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "initiation_id",
                sa.Integer(),
                nullable=False,
                comment="Case file initiation options",
            )
        )
        batch_op.alter_column(
            "case_file_number",
            existing_type=sa.INTEGER(),
            type_=sa.String(),
            existing_comment="The unique case file number",
            existing_nullable=False,
        )
        batch_op.create_foreign_key(
            "case_files_initation_id_case_file_initiation_options_id_fkey",
            "case_file_initiation_options",
            ["initiation_id"],
            ["id"],
        )
        batch_op.drop_column("initiation")

    # Load data from JSON file
    file_path = os.path.join(os.path.dirname(__file__), "../seed_data/options.json")
    with open(file_path, "r", encoding="utf-8") as file:
        data = json.load(file)

    # Helper function to insert data into a table
    def insert_data(table_name, values):
        for idx, value in enumerate(values, start=1):
            op.execute(
                f"INSERT INTO {table_name} (id, sort_order, name, created_date, created_by) VALUES ({idx}, {idx}, '{value}', now() at time zone \'utc\','system')"
            )

    # Iterate over the keys in the JSON data
    for table_name, values in data.items():
        insert_data(table_name, values)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("case_files", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "initiation",
                postgresql.ENUM(
                    "INSPECTION", "COMPLAINT", name="casefileinitiationenum"
                ),
                autoincrement=False,
                nullable=False,
                comment="Case file initiation options",
            )
        )
        batch_op.drop_constraint(
            "case_files_initation_id_case_file_initiation_options_id_fkey",
            type_="foreignkey",
        )
        batch_op.alter_column(
            "case_file_number",
            existing_type=sa.String(),
            type_=sa.INTEGER(),
            existing_comment="The unique case file number",
            existing_nullable=False,
        )
        batch_op.drop_column("initiation_id")

    op.drop_table("inspection_officers")
    op.drop_table("inspection_attendance_mappings")
    op.drop_table("inspections")
    op.drop_table("project_status_options")
    op.drop_table("ir_type_options")
    op.drop_table("ir_status_options")
    op.drop_table("inspection_initiation_options")
    op.drop_table("case_file_initiation_options")
    op.drop_table("attendance_options")
    # ### end Alembic commands ###
