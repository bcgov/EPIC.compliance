"""inspection changes

Revision ID: 5b2cf0e48b48
Revises: 736377006296
Create Date: 2024-08-29 19:31:56.129712

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5b2cf0e48b48"
down_revision = "736377006296"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "inspection_unapproved_projects", schema=None
    ) as batch_op:
        batch_op.alter_column(
            "description",
            existing_type=sa.VARCHAR(),
            nullable=False,
            existing_comment="The description of the project",
        )
        batch_op.alter_column(
            "authorization",
            existing_type=sa.VARCHAR(),
            nullable=False,
            existing_comment="The details of authorization for the project",
        )
        batch_op.alter_column(
            "proponent_name",
            existing_type=sa.VARCHAR(),
            nullable=False,
            existing_comment="The details of proponent associated with the project",
        )

    with op.batch_alter_table("inspections", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "ir_number",
                sa.String(length=50),
                nullable=False,
                comment="The unique inspection record number",
            )
        )
        batch_op.add_column(
            sa.Column(
                "case_file_id",
                sa.Integer(),
                nullable=False,
                comment="The unique identifier of the case file associated with the inspection",
            )
        )
        batch_op.create_index(
            batch_op.f("ix_inspections_ir_number"), ["ir_number"], unique=True
        )
        batch_op.create_foreign_key(
            "inspections_case_file_id_case_file_id_fkey",
            "case_files",
            ["case_file_id"],
            ["id"],
        )
    inspection_attendance_options = [
        "Agencies",
        "First Nations",
        "Municipal",
        "Independent Environmental Monitor",
        "Certificate Holder Representative",
        "Regulated Party Representative",
        "Other",
    ]
    for idx, value in enumerate(inspection_attendance_options, start=1):
            op.execute(
                f"INSERT INTO inspection_attendance_options (id, sort_order, name, created_date, created_by) VALUES ({idx}, {idx}, '{value}', now() at time zone \'utc\','system')"
            )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("inspections", schema=None) as batch_op:
        batch_op.drop_constraint(
            "inspections_case_file_id_case_file_id_fkey", type_="foreignkey"
        )
        batch_op.drop_index(batch_op.f("ix_inspections_ir_number"))
        batch_op.drop_column("case_file_id")
        batch_op.drop_column("ir_number")

    with op.batch_alter_table(
        "inspection_unapproved_projects", schema=None
    ) as batch_op:
        batch_op.alter_column(
            "proponent_name",
            existing_type=sa.VARCHAR(),
            nullable=True,
            existing_comment="The details of proponent associated with the project",
        )
        batch_op.alter_column(
            "authorization",
            existing_type=sa.VARCHAR(),
            nullable=True,
            existing_comment="The details of authorization for the project",
        )
        batch_op.alter_column(
            "description",
            existing_type=sa.VARCHAR(),
            nullable=True,
            existing_comment="The description of the project",
        )

    # ### end Alembic commands ###
