"""compliance tables

Revision ID: d8df27e5cd82
Revises: a37729f5ae7f
Create Date: 2024-09-18 21:05:47.030618

"""
from datetime import datetime
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from compliance_api.models.type import EncryptedType

# revision identifiers, used by Alembic.
revision = 'd8df27e5cd82'
down_revision = 'a37729f5ae7f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    requirement_source_table = op.create_table('requirement_sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier of the option'),
    sa.Column('name', sa.String(), nullable=True, comment='The name of the option'),
    sa.Column('sort_order', sa.Integer(), nullable=True, comment='Order of priority. Mainly used order the options while listing'),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('complaint_requirement_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier of the complaints'),
    sa.Column('complaint_id', sa.Integer(), nullable=False, comment='The associated complaint'),
    sa.Column('topic_id', sa.Integer(), nullable=False, comment='The topic of the requirement'),
    sa.Column('description', sa.String(), nullable=True, comment='Any description of the requirement'),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], name='details_complaint_id_complaints_id'),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name='details_topic_id_topics_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_source_contact',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier of the source contact'),
    sa.Column('complaint_id', sa.Integer(), nullable=False),
    sa.Column('full_name', EncryptedType(), nullable=True, comment='The full name of the contact person'),
    sa.Column('email', EncryptedType(), nullable=True, comment='The email address of the contact person'),
    sa.Column('phone', EncryptedType(), nullable=True, comment='The phone number of the contact person'),
    sa.Column('comment', EncryptedType(), nullable=True, comment='The comments'),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], name='contact_complaint_id_complaints_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_req_eac_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier of the complaints'),
    sa.Column('req_id', sa.Integer(), nullable=False, comment='The unique id of the requirement details'),
    sa.Column('amendment_number', sa.String(), nullable=True, comment='The amendment number'),
    sa.Column('amendment_condition_number', sa.String(), nullable=True, comment='The amendment condition number'),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['req_id'], ['complaint_requirement_details.id'], name='details_req_id_complaint_req_detail_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_req_order_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier of the complaints'),
    sa.Column('req_id', sa.Integer(), nullable=False, comment='The unique id of the requirement details'),
    sa.Column('order_number', sa.String(), nullable=True, comment='The order number'),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['req_id'], ['complaint_requirement_details.id'], name='details_req_id_complaint_req_detail_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_req_schedule_b_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier of the complaints'),
    sa.Column('req_id', sa.Integer(), nullable=False, comment='The unique id of the requirement details'),
    sa.Column('condition_number', sa.String(), nullable=True, comment='The condition number'),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['req_id'], ['complaint_requirement_details.id'], name='details_req_id_complaint_req_detail_id'),
    sa.PrimaryKeyConstraint('id')
    )
    
    with op.batch_alter_table('complaints', schema=None) as batch_op:
        batch_op.add_column(sa.Column('source_type_id', sa.Integer(), nullable=False, comment='The selected source of the complaint'))
        batch_op.add_column(sa.Column('source_agency_id', sa.Integer(), nullable=True, comment='The unique Id of the agency if the complaint source is selected as agency'))
        batch_op.add_column(sa.Column('source_first_nation_id', sa.Integer(), nullable=True, comment='The unique Id of the first nation if the complaint source is selected as first nation'))
        batch_op.alter_column('requirement_source_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='The selected requirement source of the complaint')
        batch_op.drop_constraint('complaints_source_id_complaint_sources_id', type_='foreignkey')
        batch_op.drop_constraint('complaints_requirement_source_id_requirement_sources_id', type_='foreignkey')
        batch_op.create_foreign_key('complaints_agency_id_agencies_id', 'agencies', ['source_agency_id'], ['id'])
        batch_op.create_foreign_key('requirement_source_id_requirement_sources_id', 'requirement_sources', ['requirement_source_id'], ['id'])
        batch_op.create_foreign_key('complaints_source_id_complaint_sources_id', 'complaint_sources', ['source_type_id'], ['id'])
        batch_op.drop_column('source_id')
    op.drop_table('complaint_requirement_sources')
    document_types = [
        {
            "name": "Schedule B",
            "sort_order": 1,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "Order",
            "sort_order": 2,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "EAC Certificate",
            "sort_order": 3,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "Certified Project Description",
            "sort_order": 4,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "Act (2018)",
            "sort_order": 5,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "Compliance Agreement",
            "sort_order": 6,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "Act (2002)",
            "sort_order": 7,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
        {
            "name": "Not EA Act",
            "sort_order": 8,
            "created_date": datetime.utcnow(),
            "created_by": "system",
            "is_active": True,
            "is_deleted": False,
        },
    ]
    op.bulk_insert(requirement_source_table, document_types)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('complaints', schema=None) as batch_op:
        batch_op.add_column(sa.Column('source_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='The selected source of the complaint'))
        batch_op.drop_constraint('complaints_source_id_complaint_sources_id', type_='foreignkey')
        batch_op.drop_constraint('requirement_source_id_requirement_sources_id', type_='foreignkey')
        batch_op.drop_constraint('complaints_agency_id_agencies_id', type_='foreignkey')
        batch_op.create_foreign_key('complaints_requirement_source_id_requirement_sources_id', 'complaint_requirement_sources', ['requirement_source_id'], ['id'])
        batch_op.create_foreign_key('complaints_source_id_complaint_sources_id', 'complaint_sources', ['source_id'], ['id'])
        batch_op.alter_column('requirement_source_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='The selected requirement source of the complaint')
        batch_op.drop_column('source_first_nation_id')
        batch_op.drop_column('source_agency_id')
        batch_op.drop_column('source_type_id')

    op.create_table('complaint_requirement_sources',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='The unique identifier of the option'),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True, comment='The name of the option'),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=True, comment='Order of priority. Mainly used order the options while listing'),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='complaint_requirement_sources_pkey'),
    sa.UniqueConstraint('name', name='complaint_requirement_sources_name_key')
    )
    op.drop_table('complaint_req_schedule_b_details')
    op.drop_table('complaint_req_order_details')
    op.drop_table('complaint_req_eac_details')
    op.drop_table('complaint_source_contact')
    op.drop_table('complaint_requirement_details')
    op.drop_table('requirement_sources')
    # ### end Alembic commands ###
