"""more compliance changes

Revision ID: a37ed457f4cb
Revises: d8df27e5cd82
Create Date: 2024-09-23 10:58:18.619124

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a37ed457f4cb'
down_revision = 'd8df27e5cd82'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('complaint_unapproved_projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='The unique identifier'),
    sa.Column('name', sa.String(), nullable=False, comment='The title of the unapproved project'),
    sa.Column('authorization', sa.String(), nullable=True, comment='The details of authorization for the project'),
    sa.Column('type', sa.String(), nullable=True, comment='The type of project'),
    sa.Column('sub_type', sa.String(), nullable=True, comment='The sub type of the project'),
    sa.Column('regulated_party', sa.String(), nullable=True, comment='The details of regulated party associated with the project'),
    sa.Column('complaint_id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], name='complaint_unapproved_projects_complaint_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('complaints', schema=None) as batch_op:
        batch_op.add_column(sa.Column('complaint_number', sa.String(length=50), nullable=False, comment='The unique complaint number'))
        batch_op.add_column(sa.Column('project_description', sa.String(), nullable=True, comment='The description of the project associated with the complaint'))
        batch_op.create_index(batch_op.f('ix_complaints_complaint_number'), ['complaint_number'], unique=True)

    with op.batch_alter_table('inspection_unapproved_projects', schema=None) as batch_op:
        batch_op.drop_column('description')

    with op.batch_alter_table('inspections', schema=None) as batch_op:
        batch_op.add_column(sa.Column('project_description', sa.String(), nullable=True, comment='The description of the project associated with the inspection'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('inspections', schema=None) as batch_op:
        batch_op.drop_column('project_description')

    with op.batch_alter_table('inspection_unapproved_projects', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True, comment='The description of the project'))

    with op.batch_alter_table('complaints', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_complaints_complaint_number'))
        batch_op.drop_column('project_description')
        batch_op.drop_column('complaint_number')

    op.drop_table('complaint_unapproved_projects')
    # ### end Alembic commands ###
